> suma <- function(x, y) {
+   resultado <- x + y
+   return(resultado)
+ }
> suma(x=4, y=6)
[1] 10
> an <- function(a1, r, n){
+     a1 * r ** (n - 1)
+ }
> an(a1=1, r=2, n=5)
[1] 16
> an(a1=4, r=-2, n=6)
[1] -128
> an(a1=1, r=2, n=1:4)
[1] 1 2 4 8
> area_rectangulo <- function(lado1, lado2) 
+ {
+   area <- lado1 * lado2
+   print(paste("el área es ", area))
+ }
> area_rectangulo(2, 3)
[1] "el área es  6"
> formals(area_rectangulo)
$lado1


$lado2


> an(a1 = 1, r = 2, n = 5) # Devuelve 16
[1] 16
> an(1, 2, 5) # Devuelve 16
[1] 16
> an(r = 2, n = 5, a1 = 1) # Devuelve 16
[1] 16
> an(n = 5, r = 2, a1 = 1) # Devuelve 16
[1] 16
> args(an)
function (a1, r, n) 
NULL
> an
function(a1, r, n){
    a1 * r ** (n - 1)
}
<bytecode: 0x000001d466f60be0>
> nombre_función <- function(arg1, arg2, arg3 ) {
+         # Código
+ }
> nombre_funcion <- function(arg1, arg2 = a, arg3 = b) {
+         # Código
+ }
> trees[1:5, ]
> lapply(X = trees, FUN = mean)
$Girth
[1] 13.24839

$Height
[1] 76

$Volume
[1] 30.17097

> arboles <- lapply(X = trees, FUN = mean)
> class(arboles)
[1] "list"
> matriz <- matrix(1:9, ncol = 3)
> matriz
     [,1] [,2] [,3]
[1,]    1    4    7
[2,]    2    5    8
[3,]    3    6    9
> lapply(matriz, quantile, probs = .8)
[[1]]
80% 
  1 

[[2]]
80% 
  2 

[[3]]
80% 
  3 

[[4]]
80% 
  4 

[[5]]
80% 
  5 

[[6]]
80% 
  6 

[[7]]
80% 
  7 

[[8]]
80% 
  8 

[[9]]
80% 
  9 

> data <- data.frame(a = c (1, 3, 7, 12, 9),
+                    b = c (4, 4, 6, 7, 8),
+                    c = c (14, 15, 11, 10, 6))
> #multiplica los valores en cada columna por 2 y devuelve los resultados como una matriz
>  sapply (data, function(data) data * 2)
      a  b  c
[1,]  2  8 28
[2,]  6  8 30
[3,] 14 12 22
[4,] 24 14 20
[5,] 18 16 12
> x <- list(A = 1, B = 1:3, C = 1:7)
> x
$A
[1] 1

$B
[1] 1 2 3

$C
[1] 1 2 3 4 5 6 7

> vapply(x, FUN = length, FUN.VALUE = 0L)
A B C 
1 3 7 
>